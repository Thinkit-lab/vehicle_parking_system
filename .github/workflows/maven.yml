# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Project CI/CD flow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 17 ]

    env:
      DB_DATABASE: vehicle_db
      DB_USER: root
      DB_PASSWORD: @Gurudesigner1

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'adopt'
        cache: maven

    - name: Set up MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

    - name: Build with Maven
      run: mvn --batch-mode -DskipTests package

    - name: Test
      run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

#    - name: Enable debug logging
#      run: echo "::set-env name=ACTIONS_STEP_DEBUG::true"

#    - name: Report
#      uses: dorny/test-reporter@v1
#      if: always()
#      with:
#        name: Maven Tests
#        path: target/surefire-reports/*.xml
#        reporter: java-junit
#        fail-on-error: true

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
